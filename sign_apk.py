#!/usr/bin/env python3
import os
import sys
import subprocess
import urllib.request
from pathlib import Path

def download_apk_signer():
    """–°–∫–∞—á–∏–≤–∞–µ–º uber-apk-signer –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    tools_dir = Path("tools")
    tools_dir.mkdir(exist_ok=True)
    
    signer_path = tools_dir / "uber-apk-signer-1.3.0.jar"
    
    if not signer_path.exists():
        print("üì• –°–∫–∞—á–∏–≤–∞–µ–º uber-apk-signer...")
        url = "https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar"
        
        try:
            urllib.request.urlretrieve(url, signer_path)
            print("‚úÖ uber-apk-signer —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
            return None
    
    return signer_path

def check_java():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Java"""
    try:
        result = subprocess.run(["java", "-version"], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Java –Ω–∞–π–¥–µ–Ω–∞")
            return True
    except FileNotFoundError:
        pass
    
    print("‚ùå Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Java JRE/JDK")
    print("–°–∫–∞—á–∞—Ç—å –º–æ–∂–Ω–æ –∑–¥–µ—Å—å: https://www.oracle.com/java/technologies/downloads/")
    return False

def sign_apk(apk_path):
    """–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º APK —Ñ–∞–π–ª"""
    if not Path(apk_path).exists():
        print(f"‚ùå APK —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {apk_path}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Java
    if not check_java():
        return False
    
    # –°–∫–∞—á–∏–≤–∞–µ–º signer
    signer_path = download_apk_signer()
    if not signer_path:
        return False
    
    print(f"üîê –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º APK: {apk_path}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–ø–∏—Å—å
        cmd = [
            "java", "-jar", str(signer_path),
            "--apks", apk_path,
            "--out", "."
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ APK —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω!")
            
            # –ò—â–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            for file in Path(".").glob("*-aligned-debugSigned.apk"):
                print(f"üì± –ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π APK: {file}")
                print(f"üìè –†–∞–∑–º–µ—Ä: {file.stat().st_size / 1024 / 1024:.2f} MB")
                return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∏: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üîê APK Signer –¥–ª—è Card Advisor KZ")
    print("=" * 40)
    
    if len(sys.argv) > 1:
        apk_path = sys.argv[1]
    else:
        apk_path = input("üìÇ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ APK —Ñ–∞–π–ª—É: ").strip()
    
    if sign_apk(apk_path):
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! APK –ø–æ–¥–ø–∏—Å–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ!")
        print("\nüì± –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Android:")
        print("1. –ü–µ—Ä–µ–Ω–µ—Å–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π APK –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ")
        print("2. –†–∞–∑—Ä–µ—à–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–∑ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
        print("3. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    else:
        print("\n‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å")

if __name__ == "__main__":
    main()